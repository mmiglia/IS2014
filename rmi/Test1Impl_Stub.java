// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package rmi;

public final class Test1Impl_Stub
    extends java.rmi.server.RemoteStub
    implements rmi.Test1, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_contaChiamate_0;
    private static java.lang.reflect.Method $method_incrementa_1;
    private static java.lang.reflect.Method $method_metodo1_2;
    private static java.lang.reflect.Method $method_nonFunzionera_3;
    
    static {
	try {
	    $method_contaChiamate_0 = rmi.Test1.class.getMethod("contaChiamate", new java.lang.Class[] {});
	    $method_incrementa_1 = rmi.Test1.class.getMethod("incrementa", new java.lang.Class[] {rmi.IntHolder.class});
	    $method_metodo1_2 = rmi.Test1.class.getMethod("metodo1", new java.lang.Class[] {});
	    $method_nonFunzionera_3 = rmi.Test1.class.getMethod("nonFunzionera", new java.lang.Class[] {});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public Test1Impl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of contaChiamate()
    public int contaChiamate()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_contaChiamate_0, null, 7958343604458563678L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of incrementa(IntHolder)
    public void incrementa(rmi.IntHolder $param_IntHolder_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_incrementa_1, new java.lang.Object[] {$param_IntHolder_1}, -1144010774823963278L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of metodo1()
    public void metodo1()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_metodo1_2, null, 7863018598788240299L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of nonFunzionera()
    public int nonFunzionera()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_nonFunzionera_3, null, -8693167216356961471L);
	    return ((java.lang.Integer) $result).intValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
